import { SvelteComponentTyped } from "svelte";
export interface AuthResponse {
    readonly access_token: string;
    readonly id_token: string;
    readonly login_hint: string;
    readonly scope: string;
    readonly expires_in: number;
    readonly first_issued_at: number;
    readonly expires_at: number;
}
export interface BasicProfile {
    getId(): string;
    getEmail(): string;
    getName(): string;
    getGivenName(): string;
    getFamilyName(): string;
    getImageUrl(): string;
}
export interface ProfileObject {
    googleId: string;
    imageUrl: string;
    email: string;
    name: string;
    givenName: string;
    familyName: string;
}
export interface GoogleLoginResponse {
    getBasicProfile(): BasicProfile;
    getAuthResponse(includeAuthorizationData?: boolean): AuthResponse;
    reloadAuthResponse(): Promise<AuthResponse>;
    getGrantedScopes(): string;
    getHostedDomain(): string;
    getId(): string;
    isSignedIn(): boolean;
    hasGrantedScopes(scopes: string): boolean;
    disconnect(): void;
    grantOfflineAccess(options: GrantOfflineAccessOptions): Promise<GoogleLoginResponseOffline>;
    signIn(options: SignInOptions): Promise<any>;
    grant(options: SignInOptions): Promise<any>;
    googleId: string;
    tokenObj: AuthResponse;
    tokenId: string;
    accessToken: string;
    readonly code?: string;
    profileObj: ProfileObject;
}
export interface GrantOfflineAccessOptions {
    readonly scope?: string;
    readonly redirect_uri?: string;
}
export interface SignInOptions {
    readonly scope?: string;
    readonly app_package_name?: string;
    readonly fetch_basic_profile?: boolean;
    readonly prompt?: string;
}
export interface GoogleLoginResponseOffline {
    readonly code: string;
}
declare const __propDef: {
    props: {
        clientId: string;
        scope?: string;
        redirectUri?: string;
        cookiePolicy?: string;
        loginHint?: string;
        hostedDomain?: string;
        prompt?: string;
        responseType?: string;
        autoLoad?: boolean;
        uxMode?: string;
        fetchBasicProfile?: boolean;
        isSignedIn?: boolean;
        discoveryDocs?: object;
        accessType?: string;
        script?: string;
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {
        default: {
            signIn: (e?: Event) => void;
            disabled: boolean;
        };
    };
};
export declare type GoogleLoginProps = typeof __propDef.props;
export declare type GoogleLoginEvents = typeof __propDef.events;
export declare type GoogleLoginSlots = typeof __propDef.slots;
export default class GoogleLogin extends SvelteComponentTyped<GoogleLoginProps, GoogleLoginEvents, GoogleLoginSlots> {
}
export {};
